/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.urbanplanning3;

import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import javax.swing.JFrame;
import java.io.PrintWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.InputMismatchException;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;

/**
 *
 * @author user
 */
public class Enter extends javax.swing.JFrame {
    
    
    Boolean[] input=new Boolean [24];
    protected String building[]={"Police Station","Research Centre","Government Office","Park","Bank","Court","Office",
                                  "Petrol Station","School","Clinic","Shop Lots","Housing Area","Condominiums",
                                  "Hospital","Fire and Rescue Station","Sports Arena","Shopping Mall","Zoo","Muzium",
                                  "Airport","Hall","University","Factory"};
    
    protected int row,column;    
    protected String buildinginv[],sym[];
    protected int symarea[];
    
    protected int max[],min[],area[];
    int index,min_=1,max_=1,areagen;
    
    int count=1;
    /**
     * Creates new form Enter
     */
    public Enter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputpane = new javax.swing.JTextPane();
        next = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setForeground(new java.awt.Color(0, 255, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Please enter the symbols, minimum blocks, maximum blocks and the description of each");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("building of your urban planning.");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Symbol, Minimum Block, Maximum Block, Description");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 51));
        jLabel4.setText("Example: L, 2, 9, Library");

        inputpane.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                inputpaneAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(inputpane);

        next.setBackground(new java.awt.Color(204, 255, 204));
        next.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("<>^v, 1, -1, Road (-1 = no maximum, ^, v, <, >, indicates direction of road, <> or ^v, ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("indicates this road is two way left right or up down, follow order <>^v)");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Default Road:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Symbol R has been reserved for Railway Station.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(132, 132, 132))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(next))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(0, 37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Boolean temp;

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
            Boolean test1=true;
            String input1;
            String symbol[];
            String build[];
            temp=true;
            try{
                PrintWriter p=new PrintWriter(new FileOutputStream("userinput.txt"));
                p.println(inputpane.getText());
                p.close();
            }catch(IOException e){
                System.out.println("Problem with file output.");
            }
            int counttt=0;
            //////////////////////////////////////////////////////////
            try{
                Scanner soo=new Scanner(new FileInputStream("userinput.txt"));
                String ttt;
                while(soo.hasNextLine()){
                    ttt=soo.nextLine();
                    if(!ttt.isEmpty()&&!ttt.isBlank())
                    counttt++;
                }
            soo.close();
            }catch(FileNotFoundException e){
                
            }
            ///////////////////////////////////////////////////////////
            try{  //1 try
                Scanner sc=new Scanner(new FileInputStream("userinput.txt"));
               
                while(sc.hasNextLine()){
 
                    input1=sc.nextLine();
                    if(!input1.isEmpty()&&!input1.isBlank()){
                    String line[]=input1.split(",");
                    line[0]=line[0].replaceAll("//s","");
                    if(line[0].equals("R")){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"Symbol R has been reserved for Railway Station.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        break;
                    }
                    if(line.length!=4){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"Please entered the properties following the order given in example.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        test1=false;
                        break;
                    }
                    if(line[1].contains(".")){
                        temp=false;
                        test1=false;
                        JOptionPane.showMessageDialog(this,"Please entered the properties following the order given in example.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }
                    line[1]=line[1].replaceAll("\\D","");
                    line[2]=line[2].replaceAll("\\D","");
                    if(line[1].isBlank()||line[1].isEmpty()){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"Please entered the properties following the order given in example.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }
                    
                    symbol=new String[counttt];
                    build=new String[counttt];
                    for(int k=0;k<counttt;k++){
                        if( line[0].equals(symbol[k])){
                            temp=false;
                            JOptionPane.showMessageDialog(this,"The symbol entered in line "+count+" has already been used.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        }
                        
                        if(line[3].equals(build[k])){
                            temp=false;
                            JOptionPane.showMessageDialog(this,"The building entered in line "+count+" has already existed.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        }
                        if(line[3].toLowerCase().contains("road")){
                            
                            temp=false;
                            
                            JOptionPane.showMessageDialog(this,"Road entered in line "+count+" has already existed.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                            break;
                        }
                        if(line[3].toLowerCase().contains("rail")){
                            temp=false;
                            JOptionPane.showMessageDialog(this,"Railway lines entered in line "+count+" has already existed.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                               break;
                        }
                    }
                    try{  //3 try
                    if(Integer.parseInt(line[1])<1){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"The value of minimum value should be more than or equals to 1.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }if(Integer.parseInt(line[2])>27){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"The biggest value of maximum value is 27.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }if(Integer.parseInt(line[2])<1){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"The value of maximum value should be more than or equals to 1.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }if(Integer.parseInt(line[1])>Integer.parseInt(line[2])){
                        temp=false;
                        JOptionPane.showMessageDialog(this,"The value of maximum blocks entered in line "+count+" should be larger than the value of minimum blocks.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }
                    }catch(Exception ex){     //3 catch
                        temp=false;
                       // JOptionPane.showMessageDialog(this,line[1]+" "+line[2], "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        JOptionPane.showMessageDialog(this,"Please make sure that integer values are entered for the values of maximum and minimum blocks.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    }
                    }  
                    count++;
                    
                }
                sym=new String[counttt];
                buildinginv=new String[counttt];
                symarea=new int[counttt];
                max=new int [counttt];
                min=new int [counttt];
                area=new int[counttt];
                sc.close();
            }catch(FileNotFoundException e){
                temp=false;
                 JOptionPane.showMessageDialog(this,"File Not Found.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(InputMismatchException e1){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(NumberFormatException e2){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(ArrayIndexOutOfBoundsException e3){
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }
           
            String buildd[];
            try{
               // JOptionPane.showMessageDialog(this,"Here i am", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                Scanner p0=new Scanner(new FileInputStream("userinput.txt"));
                Boolean test33=true;
                if(temp){
                    int i=0;
                    while(p0.hasNextLine()){
                        
                        input1=p0.nextLine();
                        //JOptionPane.showMessageDialog(this,"I am ", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        //JOptionPane.showMessageDialog(this,aa, "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                        if(!input1.isEmpty()&&!input1.isBlank()){
                        String line1[]=input1.split(",");
                        sym[i]=line1[0];
                        min[i]=Integer.parseInt(line1[1].replaceAll("\\D",""));
                        max[i]=Integer.parseInt(line1[2].replaceAll("\\D",""));
                        for(int f=0;f<line1[3].length();f++){
                            if(line1[3].charAt(f)=='('||line1[3].charAt(f)=='*'){
                                buildd=line1[3].split("\\(");
                                //JOptionPane.showMessageDialog(this,buildinginv[i]+"a", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                                buildinginv[i]=buildd[0].replaceAll(" ","");
                                test33=false;
                                break;
                            }
                        }
                        if(test33){
                            //JOptionPane.showMessageDialog(this,buildinginv[i]+"b", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                            buildinginv[i]=line1[3];
                        }
                        i++;
                        }
                    }
                    /*
                    Cityrequirements city=new Cityrequirements();
                        city.setVisible(true);
                        city.pack();
                        city.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        city.setLocationRelativeTo(null);
                        this.dispose();
                    */
                }
                
                p0.close();
            }catch(IOException e){
                JOptionPane.showMessageDialog(this,"File Not Found.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(NullPointerException e){
                temp=false;
                JOptionPane.showMessageDialog(this,"File Not Found.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(InputMismatchException e1){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(NumberFormatException e2){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(ArrayIndexOutOfBoundsException e3){
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }
            if(temp){
            try{
                PrintWriter p4=new PrintWriter(new FileOutputStream("allinputs.txt"));
                
                for(int i=0;i<sym.length;i++){
                    p4.print(sym[i]+" ");
                }
                p4.println();
                for(int i=0;i<sym.length;i++){
                    p4.print(min[i]+" ");
                }
                p4.println();
                for(int i=0;i<sym.length;i++){
                    p4.print(max[i]+" ");
                }
                int []testcondo=new int [sym.length];
                for(int i=0;i<sym.length;i++){
                    //JOptionPane.showMessageDialog(this,buildinginv[i], "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
                    if(buildinginv[i].toLowerCase().contains((" Police Station").toLowerCase())||buildinginv[i].toLowerCase().contains((" Research Centre").toLowerCase())||buildinginv[i].toLowerCase().contains(" Airport".toLowerCase())||buildinginv[i].toLowerCase().contains(" Park".toLowerCase())||buildinginv[i].toLowerCase().contains(" Bank".toLowerCase())||buildinginv[i].toLowerCase().contains(" Court".toLowerCase())||buildinginv[i].toLowerCase().contains(" Office".toLowerCase()))
                        symarea[i]=1;
                    else if(buildinginv[i].toLowerCase().contains(" Petrol Station".toLowerCase())||buildinginv[i].toLowerCase().contains(" School".toLowerCase())||buildinginv[i].toLowerCase().contains(" Clinic".toLowerCase())||buildinginv[i].toLowerCase().contains(" Shop Lots".toLowerCase())||buildinginv[i].toLowerCase().contains(" Hous".toLowerCase())||buildinginv[i].toLowerCase().contains(" Condominiums".toLowerCase()))
                        symarea[i]=2;
                    else if(buildinginv[i].toLowerCase().contains(" Hospital".toLowerCase())||buildinginv[i].toLowerCase().contains(" Fire and Rescue Station".toLowerCase())||buildinginv[i].toLowerCase().contains(" Sports Arena".toLowerCase())||buildinginv[i].toLowerCase().contains(" Shopping Mall".toLowerCase())||buildinginv[i].toLowerCase().contains(" Zoo".toLowerCase())||buildinginv[i].toLowerCase().contains(" Muzium".toLowerCase()))
                        symarea[i]=3;
                    else if(buildinginv[i].toLowerCase().contains(" Government Office".toLowerCase())||buildinginv[i].toLowerCase().contains(" Hall".toLowerCase())||buildinginv[i].toLowerCase().contains(" University".toLowerCase())||buildinginv[i].toLowerCase().contains(" Factory".toLowerCase())||buildinginv[i].toLowerCase().contains(" Restaurant".toLowerCase()))
                        symarea[i]=4;
                    else
                        symarea[i]=5;
                        }    
                p4.println();
                for(int i=0;i<sym.length;i++){
                    p4.print(symarea[i]+" ");
                }
                p4.println();
                for(int g=0;g<sym.length;g++){
                    if(buildinginv[g].toLowerCase().contains((" Condominium").toLowerCase())||buildinginv[g].toLowerCase().contains((" Hous").toLowerCase()))
                        testcondo[g]=1;
                }
                for(int i=0;i<sym.length;i++){
                    p4.print(testcondo[i]+" ");
                }
                p4.println();
                p4.close();
               
            }catch(IOException e){
                JOptionPane.showMessageDialog(this,"Problem with File Input.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(InputMismatchException e1){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(NumberFormatException e2){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(ArrayIndexOutOfBoundsException e3){
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }
            try{
                PrintWriter p3=new PrintWriter(new FileOutputStream("pas.txt"));
                p3.println(sym.length);
                
                for(int i=0;i<sym.length;i++){
                    p3.print(sym[i]+" ");
                }
                p3.println();
                for(int i=0;i<sym.length;i++){
                    p3.print(min[i]+" ");
                }
                p3.println();
                for(int i=0;i<sym.length;i++){
                    p3.print(max[i]+" ");
                }
                p3.println();
                for(int i=0;i<sym.length;i++){
                    p3.print(buildinginv[i]+"=");
                }
                p3.println();
                p3.close();
                if(temp){
                    
                    Cityrequirements city=new Cityrequirements();
                        city.setVisible(true);
                        city.pack();
                        city.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                        city.setLocationRelativeTo(null);
                        this.dispose();
                    
                }
            }catch(IOException e){
                JOptionPane.showMessageDialog(this,"Problem with File Input.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(InputMismatchException e1){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(NumberFormatException e2){
                temp=false;
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }catch(ArrayIndexOutOfBoundsException e3){
                JOptionPane.showMessageDialog(this,"The value that you have entered does not obey the rule shown in the example. Please enter the value of the correct type.", "Short Note:", JOptionPane.PLAIN_MESSAGE,null);
            }
            
            }
    }//GEN-LAST:event_nextActionPerformed
    
  
    private void inputpaneAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_inputpaneAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_inputpaneAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enter().setVisible(true);
            }
        });
        
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane inputpane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton next;
    // End of variables declaration//GEN-END:variables
}
